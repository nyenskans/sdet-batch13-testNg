                        TestNG


TestNG is an automation testing framework in which NG stands for “Next Generation”.
TestNG is inspired by JUnit which uses the annotations (@).
TestNG overcomes the disadvantages of JUnit and is designed to make end-to-end testing easy.

Using TestNG, you can generate a proper report, and you can easily come to know how many test cases are passed, failed,
and skipped. You can execute the failed test cases separately.

* It's a tool, can be used for unit testing, integration test, etc

        Why use TestNG with Selenium?
Default Selenium tests do not generate a proper format for the test results.
Using TestNG in Selenium, we can generate test results.


Results of tests will be passed/failed

We won't be using if conditions in testNG, but Assertions instead


// By default @Test annotation follows alphabetical order of execution of the text cases
e.g. public void atestCase(); --> executes first
public void btestCase(); --> executes second

- green tick -> test successfull
- red


@BeforeMethod annotation always executes before each @Test annotation
This way we can avoid repetition of code in each test

For each @Test we write, if there are any preconditions/postconditions, we can use BeforeMethod/ AfterMethod for those
and then reuse them as needed


------------------------------review--------------------------

1.What is a maven project and how does it differ from a java project?

-->Maven project we do not need any jars!!!
instead of that
-->we have a pom.xml in which we paste the dependencies that are needed.

2.how do we get those dependencies?
--> we have a maven repo and we get all the dependencies from there

3.whats a maven repo?
-->it is an online storage which has all the dependencies that can be used with a maven project.

4.What kind of dependencies you need for working with a testng and selenium project in maven?
-->Selenium
-->testNG
-->WebdriverManager
-->jcommander

5.how do u place your dependencies in POM.xml?
 <dependencies>
     <dependency>
     		<groupid>org.selenium2.selenium</groupid>
     		<artifact-id>selenium-java</artifact-id>
     		<version>4</version>
     </dependency>
 </dependencies>



6.we have different annotations?
1.@Test
every test case is going to come under this annotation

2.@beforeMethod
it executes before each test annotation

3.@aftermethod
it executes after each test annotation


to write our
pre-conditions
and
post-conditions
